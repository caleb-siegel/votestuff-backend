"""add retailer and product_link tables to the database to allow for multiple links per product in any given listicle

Revision ID: 7db21d792ee9
Revises: d2de61254cb6
Create Date: 2025-10-27 18:22:18.785017

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7db21d792ee9'
down_revision = 'd2de61254cb6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('retailers',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('affiliate_network', sa.String(length=200), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('base_affiliate_link', sa.String(length=500), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('website_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('retailers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_retailers_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_retailers_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_retailers_slug'), ['slug'], unique=True)

    op.create_table('product_links',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('retailer_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('link_name', sa.String(length=200), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.Column('is_affiliate_link', sa.Boolean(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('click_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['retailer_id'], ['retailers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_links', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_links_is_primary'), ['is_primary'], unique=False)

    with op.batch_alter_table('affiliate_clicks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_link_id', postgresql.UUID(as_uuid=True), nullable=True))
        batch_op.create_foreign_key(None, 'product_links', ['product_link_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('affiliate_clicks', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('product_link_id')

    with op.batch_alter_table('product_links', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_links_is_primary'))

    op.drop_table('product_links')
    with op.batch_alter_table('retailers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_retailers_slug'))
        batch_op.drop_index(batch_op.f('ix_retailers_name'))
        batch_op.drop_index(batch_op.f('ix_retailers_is_active'))

    op.drop_table('retailers')
    # ### end Alembic commands ###
